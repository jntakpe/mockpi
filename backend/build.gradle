buildscript {
    ext {
        kotlinVersion = '1.1.2-2'
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
        jacksonVersion = '2.8.8'
        reactorVersion = '3.0.7.RELEASE'
        reactorKotlinVersion = '1.0.0.M2'
        commonsLang3Version = '3.5'
        typescriptGenVersion = '1.21.304'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}")
        classpath ("cz.habarta.typescript-generator:typescript-generator-gradle-plugin:${typescriptGenVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'cz.habarta.typescript-generator'

version = '0.1.0'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("io.projectreactor:reactor-kotlin-extensions:${reactorKotlinVersion}")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile ("org.apache.commons:commons-lang3:${commonsLang3Version}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor.addons:reactor-test')
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = ['com.github.jntakpe.mockpi.domain.**', 'com.github.jntakpe.mockpi.web.dto.**']
    outputFile = '../frontend/src/app/shared/api.model.ts'
    outputKind = 'module'
    outputFileType = 'implementationFile'
    stringQuotes = 'singleQuotes'
    excludeClasses = ['org.bson.types.ObjectId', 'java.time.Instant', 'java.time.Duration']
}
